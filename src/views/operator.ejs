<!DOCTYPE html>
<html lang="es">
<!-- https://tincode.es/blog/manejo-de-salas-con-socket-io-y-react-hooks -->
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <%- include('includes/head') %>
    <link rel="stylesheet" href="/css/msg.css">

    <style>
        .btn-chat, .btn-ws{
            display: none;
        }

    </style>


    <script type="module">
        import { io } from 'https://cdn.socket.io/4.3.2/socket.io.esm.min.js'

        // const username = 'Operator'
        // const socket = io(
        //     {
        //         auth:{
        //             username: username
        //         }
        //     }
        // );

        const form = document.getElementById('form')
        // const chat = document.getElementById('chat-body')
        
        // socket.on('chat message', (msg) => {
        //     const div = document.createElement('div')
        //     if (msg.username === username) {
        //         div.classList.add('msg', 'msg-own')
        //         div.innerHTML = `<span>Yo</span><p>${msg.msg}</p>`
        //     }else{
        //         div.classList.add('msg', 'msg-other')
        //         div.innerHTML = `<span>${msg.username}</span><p>${msg.msg}</p>`
        //     }
        //     chat.appendChild(div)
        //     chat.scrollTop = chat.scrollHeight
        // })

        // form.addEventListener('submit', (e) => {
        //     e.preventDefault()
        //     const msg = document.getElementById('msg')
        //     if (msg.value) {
        //         socket.emit('chat message', msg.value)
        //         msg.value = ''
        //     }
        // })

        // socket.on('join', (msg) => {
        //     console.log(msg);
        // })

        // socket.on('rooms', (rooms) => {
        //     console.log(rooms);
        // })

        // const changeChannel = (channel) => {
        //     // socket.join(`channel-${channel}`)
        //     socket.emit('join', channel)
        //     console.log('Solicitar unirse');
        // }
        

        const printMsg = (data) =>{
            const chat = document.getElementById('chat-body')
            const div = document.createElement('div')
            if (data.username === user) {
                div.classList.add('msg', 'msg-own')
                div.innerHTML = `<span>Yo</span><p>${data.message}</p>`
            }else{
                div.classList.add('msg', 'msg-other')
                div.innerHTML = `<span>${data.username}</span><p>${data.message}</p>`
            }
            chat.appendChild(div)
            chat.scrollTop = chat.scrollHeight
        }

        let chat = []

        document.querySelector('.list-group').addEventListener('click', (e) => {
        //    e.preventDefault()
        //    console.log(e.target.dataset.channel)
            initiateSocket(e.target.dataset.channel)

            // Para darle estilos
            // console.log(e.target.classList.contains('active'));
            // console.log(e.target.classList.contains('active'));
            if (document.querySelector('.list-group-item.active')) {document.querySelector('.list-group-item.active').classList.remove('active')}
            e.target.classList.add('active')

            document.getElementById('chat-body').innerHTML = ''
            
            // ==================

            subscribeToChat((err, data) => {
                if (err) {
                    console.log({err});
                    return
                }
                chat = [data, ...chat]
                printMsg(data)
            })
            return () => {
                disconnectSocket();
            }
        })

        document.querySelector('.disconnect').addEventListener('click', (e) => {
            // Para darle estilos
            if (document.querySelector('.list-group-item.active')) {document.querySelector('.list-group-item.active').classList.remove('active')}
            // ==================

            disconnectSocket()
        })

        let socket
        let roomSelected = ''
        const rooms = ['a','b','c','d'] //No se usa pero es para referencia

        const initiateSocket = (room) => {
            if (roomSelected === room) {
                return
            }
            roomSelected = room
            socket = io()
            if (socket && room) {
                socket.emit('join',{room})
                console.log('Socket iniciado');
            }
        }

        const disconnectSocket = () => {
            if(socket) {
                socket.disconnect()
                roomSelected = ''
                console.log('Socket desconectado');
            };
        }

        const subscribeToChat = (cb) => {
            if (!socket) {return(true)};
            socket.on('chat', msg => {
                console.log('Websocket evento recivido!');
                console.log(msg);
                
                return cb(null, msg);
            });
        }

        let user = document.getElementById('user').value

        document.getElementById('user').addEventListener('change', (e) => {
            user = e.target.value
            console.log(user);
            
        })
        
        const sendMessage = (room, msg) => {
            if (!socket || !msg || !room) {
                return(false)
            }
            if (socket) socket.emit('chat', { msg, room, user });
        }

        form.addEventListener('submit', (e) => {
            e.preventDefault()
            const msg = document.getElementById('msg')
            // if (msg.value) {
            //     socket.emit('chat message', msg.value)
            //     msg.value = ''
            // }
            // console.log(msg.value, roomSelected);
            
            if (msg.value && roomSelected) {
                sendMessage(roomSelected,msg.value)
            }
            msg.value = ''
        })

    </script>
</head>

<body>
    <%- include('includes/nav') %>

    <main class="p-0 row m-0 px-1 px-md-3 justify-content-center bg-tertiary">

        <!-- sidebar -->
        <aside class="col p-0 bg-body-tertiary">
            <header class="bg-primary py-3 text-center">
                <h4 class="fs-3 fw-light m-0 text-white">Salas</h4>
            </header>

            <div class="h-100 border-end">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item list-group-item-action" data-channel="a">Sala 1</li>
                    <li class="list-group-item list-group-item-action" data-channel="b">Sala 2</li>
                    <li class="list-group-item list-group-item-action" data-channel="c">Sala 3</li>
                    <li class="list-group-item list-group-item-action" data-channel="d">Sala 4</li>
                </ul>
                <button class="btn btn-secondary mx-3 disconnect">Desconectar</button>
            </div>
        </aside>

        <!-- chat -->
        <section class="col-12 col-md-8 col-lg-8 p-0 bg-body-tertiary">
            <header class="bg-primary py-3 text-center">
                <h4 class="fs-3 fw-light m-0 text-white">Conversación</h4>
            </header>

            <p class="text-center border-bottom"><b>Nota:</b> Esta área es solo de pruebas. Pruebe enviar un mensaje.</p>

            <section id="chat-body" class="msg-panel d-flex flex-column p-3 border-bottom">
            </section>

            <form class="input-group p-3" id="form">
                <button class="input-group-text" id="basic-addon1">
                    <i class="bi bi-send-fill text-secondary"></i>
                </button>
                <input type="text" class="form-control" placeholder="Enviar un mensaje" name="msg" id="msg">
                <div>
                    <select class="form-select" name="channel" id="user">
                        <option value="Angela">Angela</option>
                        <option value="Rebeca">Rebeca</option>
                        <option value="Elizabeth">Elizabeth</option>
                        <option value="Carlos">Carlos</option>
                    </select>
                </div>
            </form>
        </section>
    </main>

    <%- include('includes/footer') %>
</body>

</html>